buildscript {
    repositories {
        maven {
            url('https://repo.jenkins-ci.org/public/')
        }
    }
    dependencies {
        classpath 'org.jenkins-ci.tools:gradle-jpi-plugin:0.22.0'
        classpath 'org.jvnet.localizer:maven-localizer-plugin:1.23'
        classpath 'ru.vyarus:gradle-quality-plugin:2.2.0'
    }
}

plugins {
    id "de.undercouch.download" version "3.2.0"
    id "org.jenkins-ci.jpi" version "0.22.0"
    id "java"
}

group = 'ru.yandex.qatools.allure'
version = '2.15-SNAPSHOT'

description = 'Allure Jenkins Plugin'

sourceCompatibility = "$javaLevel"
targetCompatibility = "$javaLevel"

repositories {
    mavenCentral()
    maven {
        url('https://repo.jenkins-ci.org/public/')
    }
}

jenkinsPlugin {
    coreVersion = "$jenkinsVersion"
    displayName = "Allure reporting plugin for Jenkins CI"
    url = 'https://qameta.io/allure'
    gitHubUrl = 'https://github.com/jenkinsci/allure-plugin'
    maskClasses = 'org.jvnet.hudson.test'

    developers {
        developer {
            id 'dchr'
            name 'Denis Chernilevsky'
            email 'dchr@yandex-team.ru'
        }
        developer {
            id 'eroshenkoam'
            name 'Artem Eroshenko'
            email 'eroshenkoam@qameta.io'
        }
        developer {
            id 'mavlyutov'
            name 'Marat Mavlyutov'
            email 'mavlyutov@yandex-team.ru'
        }
        developer {
            id 'pupssman'
            name 'Ivan Kalinin'
            email 'pupssman@yandex-team.ru'
        }
        developer {
            id 'vania-pooh'
            name 'Ivan Krutov'
            email 'vania-pooh@yandex-team.ru'
        }
        developer {
            id 'baev'
            name 'Dmitry Baev'
            email 'baev.dm@gmail.com'
        }
    }

    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
}

dependencies {
    compile 'org.jenkins-ci.plugins:structs:1.5@jar'
    compile 'org.jenkins-ci.plugins:matrix-project:1.7.1@jar'
    compile 'org.jenkins-ci.plugins:job-dsl:1.51@jar'
    compile 'org.jenkins-ci.plugins:job-dsl-core:1.51@jar'
    compile 'org.jenkins-ci:symbol-annotation:1.1'
    compile 'de.schlichtherle.truezip:truezip-driver-zip:7.7.10'
    compile 'de.schlichtherle.truezip:truezip-file:7.7.10'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.6.0'
    testCompile 'ru.yandex.qatools.matchers:nio-matchers:1.3'
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.7.0'
    compile 'org.jenkins-ci.plugins:script-security:1.24@jar'
    compile 'org.jenkins-ci.plugins.workflow:workflow-cps:2.21@jar'
    compile 'org.jenkins-ci.plugins.workflow:workflow-scm-step:2.4@jar'
    compile 'org.jenkins-ci.plugins.workflow:workflow-support:2.14@jar'
    compile 'org.jenkins-ci.plugins.workflow:workflow-job:2.8@jar'
    compile 'org.jenkins-ci.plugins.workflow:workflow-durable-task-step:2.4@jar'
    compile 'org.jenkins-ci.plugins.workflow:workflow-basic-steps:2.1@jar'
    compile 'org.jenkins-ci.plugins.workflow:workflow-step-api:2.4@jar'
    compile 'org.jenkins-ci.plugins.workflow:workflow-api:2.4@jar'
    compile 'org.jenkins-ci.plugins:scm-api:2.1.1@jar'
    compile 'org.jenkins-ci.plugins:junit:1.20@jar'
    compile 'org.jenkins-ci.main:jenkins-test-harness:2.7@jar'
    compile group: 'com.cloudbees', name: 'groovy-cps', version: '1.12'
    compile group: 'org.kohsuke', name: 'groovy-sandbox', version: '1.11'
}

import de.undercouch.gradle.tasks.download.Download
task downloadAllureCli(type: Download, dependsOn: 'processTestResources') {
    src "https://github.com/allure-framework/allure1/releases/download/" +
            "allure-core-$allureCommandlineVersion/allure-commandline.zip"
    dest "$buildDir/resources/test"
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

apply plugin: 'ru.vyarus.quality'

quality {
    checkstyleVersion = '7.6'
    pmdVersion = '5.5.4'
    findbugsVersion = '3.0.1'
    codenarcVersion = '0.26.0'
    excludeSources = fileTree('build/generated-sources')
}